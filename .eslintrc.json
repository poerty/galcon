{
  "env": {
    "browser": true,
    "node": true,
    "commonjs": true,
    "es6": true,
    "jest": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended"
  ],
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "parser": "@typescript-eslint/parser",
  "plugins": [
    "react"
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "globals": {
    "getEnv": false
  },
  "rules": {
    "prefer-template": "error",
    "spaced-comment": [
      "error",
      "always",
      {
        "exceptions": [
          "-",
          "+"
        ]
      }
    ],
    "no-console": "off",
    "max-len": [
      "error",
      {
        "ignoreComments": true,
        "code": 150
      }
    ],
    "comma-dangle": [
      "error",
      "always-multiline"
    ],
    "indent": [
      "error",
      2,
      {
        "SwitchCase": 1
      }
    ],
    "linebreak-style": [
      "error",
      "unix"
    ],
    "quotes": [
      "error",
      "single"
    ],
    "jsx-quotes": [
      "error",
      "prefer-single"
    ],
    "semi": [
      "error",
      "always"
    ],
    "prefer-const": [
      "error",
      {
        "destructuring": "any",
        "ignoreReadBeforeAssign": false
      }
    ],
    "prefer-destructuring": [
      "error",
      {
        "array": true,
        "object": false
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "object-shorthand": [
      "error",
      "always"
    ],
    "react/jsx-sort-props": 0,
    "react/jsx-sort-prop-types": 0,
    "react/jsx-uses-react": 2,
    "react/jsx-uses-vars": 2,
    "react/no-did-mount-set-state": 2,
    "react/no-did-update-set-state": 2,
    "react/no-unknown-property": 2,
    "react/prop-types": 2,
    "react/react-in-jsx-scope": 2,
    "react/self-closing-comp": 2,
    "react/jsx-wrap-multilines": 2,
    "react/sort-comp": [
      2,
      {
        "order": [
          "static-methods",
          "everything-else",
          "lifecycle",
          "render"
        ],
        "groups": {
          "lifecycle": [
            "displayName",
            "propTypes",
            "contextTypes",
            "childContextTypes",
            "mixins",
            "statics",
            "defaultProps",
            "constructor",
            "getDefaultProps",
            "state",
            "getInitialState",
            "getChildContext",
            "getDerivedStateFromProps",
            "componentWillMount",
            "UNSAFE_componentWillMount",
            "componentDidMount",
            "componentWillReceiveProps",
            "UNSAFE_componentWillReceiveProps",
            "shouldComponentUpdate",
            "componentWillUpdate",
            "UNSAFE_componentWillUpdate",
            "getSnapshotBeforeUpdate",
            "componentDidUpdate",
            "componentDidCatch",
            "componentWillUnmount"
          ]
        }
      }
    ],
    "@typescript-eslint/indent": [
      "error",
      2,
      {
        "SwitchCase": 1
      }
    ],
    "@typescript-eslint/prefer-interface": [
      false
    ],
    "@typescript-eslint/interface-name-prefix": [
      "never"
    ],
    "@typescript-eslint/no-explicit-any": [
      false
    ],
    "@typescript-eslint/explicit-function-return-type": [
      false
    ],
    "@typescript-eslint/no-non-null-assertion": [
      false
    ],
    "@typescript-eslint/class-name-casing": [
      false
    ],
    "@typescript-eslint/no-empty-interface": [
      false
    ],
    "@typescript-eslint/member-ordering": [
      true
    ],
    "@typescript-eslint/no-type-alias": [
      true,
      {
        "allowAliases": "in-unions-and-intersections"
      }
    ],
    "@typescript-eslint/no-useless-constructor": [
      true
    ],
    "@typescript-eslint/promise-function-async": [
      true
    ],
    "@typescript-eslint/restrict-plus-operands": [
      true
    ],
    "@typescript-eslint/prefer-function-type": [
      true
    ]
  }
}